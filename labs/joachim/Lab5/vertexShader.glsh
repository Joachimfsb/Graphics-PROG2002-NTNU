#include <string>

const std::string VERTEX_PROGRAM = R"(
    #version 430 core

    layout(location = 0) in vec3 shader_position;
    layout(location = 1) in vec3 a_NormalVector; // Declare the normal vertex attribute

    uniform mat4 u_ModelMatrix;
    uniform mat4 u_ViewMatrix;
    uniform mat4 u_ProjectionMatrix;

    out vec4 v_Position;
    out vec4 v_NormalVec;
    out vec4 v_fragPosition;


    void main()
    {
        gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(shader_position, 1.0f);

        v_Position = vec4(shader_position, 1.0);
        v_fragPosition = u_ModelMatrix * vec4(shader_position, 1.0);
        v_NormalVec = normalize(u_ModelMatrix * vec4(a_NormalVector, 1.0));
    }
    )";